



python -> programming language 

programming language ?? 
	
	communicate with computer ->
			computer will do your task->
				computer task -> 
	instruction -> job perform 

 

c lang. 


printf("hi") --> yes , print hi , header , encrypted binary first , 
		it will only understand binary 
  		we have to convert into binary -> print 




instruction -> print printf hi bye -> english -> 

computer -> language? 
		0 1 -> binary 



developer -> binary ? english ? 

eng --> computer -> binary ? 
Translator -> 
		compiler   
		interpreter 
		assembler 

 
compiler vs interpreter ? 

	whole at once 
	line by line 

	speed ? 
	efficie? 

-------------------------------------------------------
c -> turbo compiler -> TC
	BC 
	GCC -> linux   


python -> interpreter --> exact error 
-------------------------------------------------------

Guido Van Rossum -> abc -> Math ->
	new lang? 1980 -> 1989->
	1991 -> python -> 1.0 


python -> math -> DL ML AI -> 


open source , higher level language , interpreted 
oop -> object oriented progr.  SETL 


python 2 -> less code , high producticity 
python 3 -> 
----------------------------------------
python 3 -> google -> python2 copy legacy code ->
 

tools ? 
	1) python - 
	2) text editor -> code | vscode | notepad 

--------------------------------------------------
.c 
.cpp
.python 
.pt
.py 

 less code ? 



input() -> this function is used to read data from console 
		-> it will read string by default 


int() -> to convert data from string to int 




#take two numbers from user print addition of it 


#take number from user -> print -> even or odd 






data type -> 

a = 10 


scanf()
cin>>

take name from user -> scan -> input() 

scanf -> cin -> input() 

print("hi") => end=\n 

print("hi",end="\n") 

print("hi",end="")
print("bye")









ask two numbers 
20
10

1 For addition
2 For subtraction
3 For Div
4 For Mul 
Enter Your choice 

switch case ? no 


else if ladder -> 
if 
else if 
else if 
else if 
else 


switch -> else if ladder -> 



loop -> repeat task 

	1) entry control
		for while  
	2) exit control
		do..while  

 

1) print 1 to 20 using for loop 
2) ask start number and end from user and print all numbers between start and end 
   10 
   18 
   10 11 12 13 14 15 16 17 18 

   
3) take number from user and print multiplication table of that number 
num = 5 
5	*	1	=	5
5	*	2	=	10
5	*	3	=	15
.....
5	*	10	=	50	

4)
	num = 8 
   1  -2   3 -4  5 -6  7 -8 

5) num = 4 
   1 4 9 16 

6) 0 1 1 2 3 5 8 -> fibbonaci

7) num = 5 
   *
   **
   ***
   ****
   *****


Task2 

1) 
A
AB
ABC
ABCD
ABCDE 

2)
    *
   * *
  * * * 
 * * * * 
* * * * *

3) 
* * * * * 
 * * * * 
  * * *
   * *  
    *

4) combine 3rd and 4th 


#while 
# reverse number 
# sum of digit -> 123 {1+2+3} {6}
     # 254 {11} {2+5+4}
# find out the max digit from number 
#   2596 => 9 
#   1452 => 5 


-----------------------------------------
String -> 
c c++ java 
x = 'd'  -> character 
x = "d"  -> String 

python -> single quote / double quote => same 

x = 'j' -> string 
x = "j" -> string 


name = "royal" 
name = 'royal' 

comment -> 
	single line # 
	multi line  """    """    '''      '''

1) take string from user and count vowels 
2) take string from user and count total capital letters 
	

1) take password from user and print 
		strong -> if it contains 
						1 capital
						1 lower 
						1 digit 
						>= 8 in length 
		normal -> if it contains 
						>= 8 in length
						any of two from {1 lower, 1 upper, 1 digit }
		weak -> if it is < 8 length 
				  
		weak -> it contains only lower or only upper or only digit 


str.lower() => 


------------------------------------------------------------------------------
function -> 

	problem -> 
		calculator -> 	
				add:
					XXX 
				sub:
					XXX 
				mul:
					XXX 
				div: 
					XXX 

function -> block name -> which contains n number of instruction 
							which contains set of instruction
							you need to call your function 
						 	reuse 
define => 
add() 
	a = 10
	b = 20 
	ans = a + b 
	print ans 

call => 
add();
add();
add();

---------------------------------------------------------

create one file calc_def.py 
which contains all the calculator function 
	add 
	sub 
	mul
	sqr 
create 1 more file consumer.py , this file call all the 
calculator functions based on user's choice 
	1 add 
	2 sub
	3 mul 
	4 sqr 
------------------------------------------------------
2 -> sum 
5 -> sum
15 -> sum 


int a[5]; //4[ ]  4[ ] 4[ ] 4[ ] 4[ ] => 20 byte 

2 element => 8
3 element => 12 


7 element => limit 5 



list => 

dynamic -> add : grow , remove : shrink 
			     increase        decrease 
				 allocate 	     release 


how to declare 

list = []
names = []
numbers=[] 

colors = ['red','blue','green',250,'yellow',20.25]


print(colors)
print(colors[0])




































 







     	
